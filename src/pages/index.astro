---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';

const lessons = await getCollection('lessons');
const sortedLessons = lessons.sort((a, b) => a.data.postNumber - b.data.postNumber);
---

<Layout title="Home">
  <div class="max-w-4xl mx-auto">
    <!-- Hero Section -->
    <section class="mb-12">
      <h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-gray-100 mb-4">
        Learn Erlang Step-By-Step
      </h1>
      <p class="text-xl text-gray-600 dark:text-gray-400 mb-6">
        Build a real-time WebSocket chat server from scratch using pure Erlang. 
        No frameworks, no shortcuts - just the fundamentals that will make you 
        understand how systems like Phoenix LiveView actually work.
      </p>
      
      <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-8">
        <div class="bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg">
          <h3 class="font-semibold text-blue-900 dark:text-blue-100 mb-2">ðŸŽ¯ Practical Project</h3>
          <p class="text-sm text-blue-700 dark:text-blue-300">Build a complete WebSocket chat server</p>
        </div>
        <div class="bg-green-50 dark:bg-green-900/20 p-4 rounded-lg">
          <h3 class="font-semibold text-green-900 dark:text-green-100 mb-2">ðŸš€ From Zero to Hero</h3>
          <p class="text-sm text-green-700 dark:text-green-300">No prior Erlang knowledge required</p>
        </div>
        <div class="bg-purple-50 dark:bg-purple-900/20 p-4 rounded-lg">
          <h3 class="font-semibold text-purple-900 dark:text-purple-100 mb-2">âš¡ Real-world Skills</h3>
          <p class="text-sm text-purple-700 dark:text-purple-300">Learn OTP patterns used in production</p>
        </div>
      </div>
      
      <a
        href={`/lessons/${sortedLessons[0].slug}`}
        class="inline-flex items-center px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors"
      >
        Start Learning
        <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
        </svg>
      </a>
    </section>
    
    <!-- What You'll Learn -->
    <section class="mb-12">
      <h2 class="text-2xl font-bold text-gray-900 dark:text-gray-100 mb-6">
        What You'll Learn
      </h2>
      
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div class="space-y-4">
          <div class="flex items-start space-x-3">
            <svg class="w-6 h-6 text-green-500 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <div>
              <h3 class="font-medium text-gray-900 dark:text-gray-100">The Actor Model</h3>
              <p class="text-sm text-gray-600 dark:text-gray-400">Understand lightweight processes and message passing</p>
            </div>
          </div>
          
          <div class="flex items-start space-x-3">
            <svg class="w-6 h-6 text-green-500 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <div>
              <h3 class="font-medium text-gray-900 dark:text-gray-100">Fault Tolerance</h3>
              <p class="text-sm text-gray-600 dark:text-gray-400">Master the "let it crash" philosophy</p>
            </div>
          </div>
          
          <div class="flex items-start space-x-3">
            <svg class="w-6 h-6 text-green-500 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <div>
              <h3 class="font-medium text-gray-900 dark:text-gray-100">OTP Behaviors</h3>
              <p class="text-sm text-gray-600 dark:text-gray-400">Use battle-tested patterns for robust systems</p>
            </div>
          </div>
        </div>
        
        <div class="space-y-4">
          <div class="flex items-start space-x-3">
            <svg class="w-6 h-6 text-green-500 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <div>
              <h3 class="font-medium text-gray-900 dark:text-gray-100">Hot Code Reloading</h3>
              <p class="text-sm text-gray-600 dark:text-gray-400">Update systems without downtime</p>
            </div>
          </div>
          
          <div class="flex items-start space-x-3">
            <svg class="w-6 h-6 text-green-500 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <div>
              <h3 class="font-medium text-gray-900 dark:text-gray-100">WebSocket Implementation</h3>
              <p class="text-sm text-gray-600 dark:text-gray-400">Build real-time communication from scratch</p>
            </div>
          </div>
          
          <div class="flex items-start space-x-3">
            <svg class="w-6 h-6 text-green-500 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <div>
              <h3 class="font-medium text-gray-900 dark:text-gray-100">Production Patterns</h3>
              <p class="text-sm text-gray-600 dark:text-gray-400">Learn techniques used in real-world systems</p>
            </div>
          </div>
        </div>
      </div>
    </section>
    
    <!-- Course Outline -->
    <section>
      <h2 class="text-2xl font-bold text-gray-900 dark:text-gray-100 mb-6">
        Course Outline
      </h2>
      
      <div class="space-y-4">
        {sortedLessons.map((lesson) => (
          <a
            href={`/lessons/${lesson.slug}`}
            class="block p-6 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600 transition-colors"
          >
            <div class="flex items-start justify-between">
              <div class="flex-1">
                <div class="flex items-center gap-3 mb-2">
                  <span class="flex-shrink-0 w-8 h-8 bg-blue-100 dark:bg-blue-900/50 text-blue-700 dark:text-blue-300 rounded-full flex items-center justify-center font-medium text-sm">
                    {lesson.data.postNumber}
                  </span>
                  <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100">
                    {lesson.data.title}
                  </h3>
                </div>
                <p class="text-gray-600 dark:text-gray-400 mb-3">
                  {lesson.data.description}
                </p>
                <div class="flex items-center gap-4 text-sm">
                  <span class="text-gray-500 dark:text-gray-400">
                    {lesson.data.estimatedReadingTime || 10} min read
                  </span>
                </div>
              </div>
              
              <svg class="w-5 h-5 text-gray-400 flex-shrink-0 ml-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
              </svg>
            </div>
          </a>
        ))}
      </div>
    </section>
  </div>
</Layout>