---
import { getCollection } from 'astro:content';
import ProgressTracker from './ProgressTracker.astro';

const lessons = await getCollection('lessons');
const sortedLessons = lessons.sort((a, b) => a.data.postNumber - b.data.postNumber);

const currentPath = Astro.url.pathname;
---

<!-- Mobile Overlay -->
<div id="mobile-overlay" class="fixed inset-0 bg-black bg-opacity-50 z-30 hidden lg:hidden"></div>

<aside id="sidebar" class="sidebar">
  <!-- Desktop Controls -->
  <div class="desktop-controls">
    <button id="collapse-btn" class="collapse-button" title="Collapse sidebar">
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 19l-7-7 7-7m8 14l-7-7 7-7"></path>
      </svg>
    </button>
    <div id="resize-handle" class="resize-handle" title="Drag to resize"></div>
  </div>
  
  <div class="sidebar-content">
    <div class="mb-6">
      <ProgressTracker lessons={sortedLessons} />
    </div>
    
    <nav class="space-y-1">
      <h2 class="text-xs font-semibold text-gray-600 dark:text-gray-400 uppercase tracking-wider mb-3">
        Tutorial Lessons
      </h2>
      
      {sortedLessons.map((lesson) => {
        const isActive = currentPath === `/lessons/${lesson.slug}`;
        const isCompleted = false; // Will be updated with localStorage
        
        return (
          <a
            href={`/lessons/${lesson.slug}`}
            class={`
              group flex items-center px-3 py-2 text-sm font-medium rounded-md transition-colors
              ${isActive 
                ? 'bg-blue-100 dark:bg-blue-900/50 text-blue-700 dark:text-blue-300' 
                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800'
              }
            `}
            data-lesson-number={lesson.data.postNumber}
          >
            <span class={`
              flex-shrink-0 w-6 h-6 rounded-full border-2 mr-3 flex items-center justify-center text-xs
              ${isActive 
                ? 'border-blue-500 bg-blue-500 text-white' 
                : 'border-gray-300 dark:border-gray-600'
              }
            `}>
              {isCompleted ? (
                <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                </svg>
              ) : (
                lesson.data.postNumber
              )}
            </span>
            
            <span class="truncate sidebar-lesson-title" title={lesson.data.title}>{lesson.data.title}</span>
          </a>
        );
      })}
    </nav>
    
    <div class="mt-8 pt-8 border-t border-gray-200 dark:border-gray-800">
      <h3 class="text-xs font-semibold text-gray-600 dark:text-gray-400 uppercase tracking-wider mb-3">
        Resources
      </h3>
      <div class="flex flex-col space-y-2">
        <a href="/resources" class="text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100">
          üìö Additional Resources
        </a>
        <a href="/cheatsheet" class="text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100">
          üìù Erlang Cheatsheet
        </a>
        <a href="mailto:feedback@pennypack.dev?subject=Learn Erlang Tutorial Feedback" class="text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100">
          üìß Send Feedback
        </a>
      </div>
    </div>
    
    <div class="mt-8 pt-8 border-t border-gray-200 dark:border-gray-800">
      <h3 class="text-xs font-semibold text-gray-600 dark:text-gray-400 uppercase tracking-wider mb-3">
        About
      </h3>
      <div class="flex flex-col space-y-2">
        <a href="https://pennypack.dev" target="_blank" rel="noopener noreferrer" class="text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100">
          üåê Pennypack Software
        </a>
        <a href="https://pennypack.dev/about" target="_blank" rel="noopener noreferrer" class="text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100">
          üëã About Us
        </a>
        <a href="https://pennypack.dev/contact" target="_blank" rel="noopener noreferrer" class="text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100">
          üìû Contact
        </a>
      </div>
    </div>
  </div>
</aside>

<style>
  .sidebar {
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    width: 80vw;
    max-width: 28rem;
    background: rgb(249 250 251);
    border-right: 1px solid rgb(229 231 235);
    overflow-y: auto;
    transform: translateX(-100%);
    transition: transform 0.3s ease;
    z-index: 40;
  }
  
  @media (min-width: 1024px) {
    .sidebar {
      width: 16rem;
      min-width: 16rem;
    }
  }
  
  :global(.dark) .sidebar {
    background: rgb(17 24 39);
    border-right-color: rgb(55 65 81);
  }
  
  @media (min-width: 1024px) {
    .sidebar {
      position: relative;
      transform: translateX(0);
    }
    
    .sidebar.collapsed {
      width: 4rem !important;
      min-width: 4rem !important;
    }
    
    .sidebar.collapsed .sidebar-content {
      opacity: 0;
      pointer-events: none;
    }
  }
  
  .sidebar.open {
    transform: translateX(0) !important;
  }
  
  @media (max-width: 1023px) {
    .sidebar.open {
      transform: translateX(0) !important;
    }
  }
  
  .desktop-controls {
    display: none;
  }
  
  @media (min-width: 1024px) {
    .desktop-controls {
      display: block;
    }
  }
  
  .collapse-button {
    position: absolute;
    top: 1rem;
    right: -0.75rem;
    width: 1.75rem;
    height: 1.75rem;
    background: white;
    border: 1px solid rgb(209 213 219);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 60;
    transition: all 0.2s;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
  
  :global(.dark) .collapse-button {
    background: rgb(31 41 55);
    border-color: rgb(75 85 99);
    color: rgb(156 163 175);
  }
  
  .collapse-button:hover {
    background: rgb(243 244 246);
    transform: scale(1.05);
  }
  
  :global(.dark) .collapse-button:hover {
    background: rgb(55 65 81);
  }
  
  .resize-handle {
    position: absolute;
    top: 0;
    right: 0;
    width: 4px;
    height: 100%;
    cursor: col-resize;
    background: transparent;
    transition: background-color 0.2s;
  }
  
  .resize-handle:hover {
    background: rgb(59 130 246);
  }
  
  .sidebar-content {
    padding: 1rem;
    transition: opacity 0.2s ease;
  }
  
  @media (max-width: 1023px) {
    .sidebar-content {
      padding-top: 5rem; /* Extra space for mobile header */
      padding-bottom: 2rem; /* Extra space for mobile footer */
    }
  }
  
  #mobile-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    z-index: 35;
    transition: opacity 0.3s ease;
  }
  
  #mobile-overlay.hidden {
    opacity: 0;
    pointer-events: none;
    visibility: hidden;
  }
  
  #mobile-overlay:not(.hidden) {
    opacity: 1;
    pointer-events: auto;
    visibility: visible;
  }
  
  @media (min-width: 1024px) {
    #mobile-overlay {
      display: none !important;
    }
  }
</style>

<script>
  let sidebarState = {
    isCollapsed: localStorage.getItem('sidebarCollapsed') === 'true',
    width: localStorage.getItem('sidebarWidth') || '16rem'
  };
  
  let sidebarInitialized = false;
  
  function updateCompletionStatus() {
    const completedLessons = JSON.parse(localStorage.getItem('completedLessons') || '[]');
    
    document.querySelectorAll('[data-lesson-number]').forEach((link) => {
      const lessonNumber = parseInt(link.getAttribute('data-lesson-number') || '0');
      if (completedLessons.includes(lessonNumber)) {
        const numberSpan = link.querySelector('span:first-child');
        if (numberSpan && !link.classList.contains('bg-blue-100')) {
          numberSpan.classList.add('bg-green-500', 'text-white', 'border-green-500');
          numberSpan.innerHTML = '<svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" /></svg>';
        }
      }
    });
  }
  
  function initSidebar() {
    if (sidebarInitialized) return;
    
    const sidebar = document.getElementById('sidebar');
    const collapseBtn = document.getElementById('collapse-btn');
    const resizeHandle = document.getElementById('resize-handle');
    const mobileOverlay = document.getElementById('mobile-overlay');
    
    if (!sidebar) return;
    
    // Apply saved state on desktop
    if (window.innerWidth >= 1024) {
      if (sidebarState.isCollapsed) {
        sidebar.classList.add('collapsed');
      } else {
        sidebar.style.width = sidebarState.width;
      }
    }
    
    // Desktop collapse toggle
    if (collapseBtn) {
      // Remove any existing listeners by cloning the button
      collapseBtn.replaceWith(collapseBtn.cloneNode(true));
      const newCollapseBtn = document.getElementById('collapse-btn');
      
      if (newCollapseBtn) {
        newCollapseBtn.addEventListener('click', (e) => {
          e.preventDefault();
          e.stopPropagation();
          
          sidebarState.isCollapsed = !sidebarState.isCollapsed;
          localStorage.setItem('sidebarCollapsed', sidebarState.isCollapsed.toString());
          
          if (sidebarState.isCollapsed) {
            sidebar.classList.add('collapsed');
          } else {
            sidebar.classList.remove('collapsed');
            sidebar.style.width = sidebarState.width;
          }
        });
      }
    }
    
    // Resize functionality
    if (resizeHandle) {
      let isResizing = false;
      
      resizeHandle.addEventListener('mousedown', (e) => {
        if (sidebarState.isCollapsed) return;
        
        isResizing = true;
        document.body.style.cursor = 'col-resize';
        document.body.style.userSelect = 'none';
        
        const startX = e.clientX;
        const startWidth = sidebar.offsetWidth;
        
        function handleMouseMove(e) {
          if (!isResizing) return;
          
          const newWidth = startWidth + (e.clientX - startX);
          const minWidth = 192; // 12rem
          const maxWidth = 448; // 28rem
          
          if (newWidth >= minWidth && newWidth <= maxWidth) {
            sidebar.style.width = newWidth + 'px';
            sidebarState.width = newWidth + 'px';
          }
        }
        
        function handleMouseUp() {
          isResizing = false;
          document.body.style.cursor = '';
          document.body.style.userSelect = '';
          localStorage.setItem('sidebarWidth', sidebarState.width);
          
          document.removeEventListener('mousemove', handleMouseMove);
          document.removeEventListener('mouseup', handleMouseUp);
        }
        
        document.addEventListener('mousemove', handleMouseMove);
        document.addEventListener('mouseup', handleMouseUp);
      });
    }
    
    sidebarInitialized = true;
  }
  
  // Initialize
  document.addEventListener('DOMContentLoaded', () => {
    updateCompletionStatus();
    initSidebar();
  });
  
  document.addEventListener('astro:page-load', () => {
    sidebarInitialized = false; // Reset for new page
    updateCompletionStatus();
    initSidebar();
  });
</script>