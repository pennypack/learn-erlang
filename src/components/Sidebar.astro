---
import { getCollection } from 'astro:content';
import ProgressTracker from './ProgressTracker.astro';

const lessons = await getCollection('lessons');
const sortedLessons = lessons.sort((a, b) => a.data.postNumber - b.data.postNumber);

const currentPath = Astro.url.pathname;
---

<aside
  id="sidebar"
  class="fixed lg:relative inset-y-0 left-0 z-40 bg-gray-50 dark:bg-gray-900 border-r border-gray-200 dark:border-gray-800 overflow-y-auto transform -translate-x-full lg:translate-x-0 transition-all duration-200 ease-in-out"
  style="width: 16rem;"
>
  <!-- Desktop Toggle Button -->
  <button
    id="desktop-sidebar-toggle"
    class="hidden lg:flex absolute -right-3 top-4 w-6 h-6 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-full items-center justify-center hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors z-50 shadow-sm"
    aria-label="Toggle sidebar"
  >
    <svg id="collapse-icon" class="w-3 h-3 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
    </svg>
  </button>
  
  <!-- Resize Handle -->
  <div
    id="resize-handle"
    class="hidden lg:block absolute right-0 top-0 w-2 h-full cursor-col-resize group z-40"
    title="Drag to resize sidebar"
  >
    <div class="w-full h-full bg-transparent group-hover:bg-blue-500/30 transition-colors flex items-center justify-center">
      <div class="w-0.5 h-8 bg-gray-300 dark:bg-gray-600 group-hover:bg-blue-500 transition-colors rounded-full"></div>
    </div>
  </div>
  
  <div class="p-4" id="sidebar-content">
    <div class="mb-6">
      <ProgressTracker lessons={sortedLessons} />
    </div>
    
    <nav class="space-y-1">
      <h2 class="text-xs font-semibold text-gray-600 dark:text-gray-400 uppercase tracking-wider mb-3">
        Tutorial Lessons
      </h2>
      
      {sortedLessons.map((lesson) => {
        const isActive = currentPath === `/lessons/${lesson.slug}`;
        const isCompleted = false; // Will be updated with localStorage
        
        return (
          <a
            href={`/lessons/${lesson.slug}`}
            class={`
              group flex items-center px-3 py-2 text-sm font-medium rounded-md transition-colors
              ${isActive 
                ? 'bg-blue-100 dark:bg-blue-900/50 text-blue-700 dark:text-blue-300' 
                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800'
              }
            `}
            data-lesson-number={lesson.data.postNumber}
          >
            <span class={`
              flex-shrink-0 w-6 h-6 rounded-full border-2 mr-3 flex items-center justify-center text-xs
              ${isActive 
                ? 'border-blue-500 bg-blue-500 text-white' 
                : 'border-gray-300 dark:border-gray-600'
              }
            `}>
              {isCompleted ? (
                <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                </svg>
              ) : (
                lesson.data.postNumber
              )}
            </span>
            
            <span class="truncate sidebar-lesson-title" title={lesson.data.title}>{lesson.data.title}</span>
          </a>
        );
      })}
    </nav>
    
    <div class="mt-8 pt-8 border-t border-gray-200 dark:border-gray-800">
      <h3 class="text-xs font-semibold text-gray-600 dark:text-gray-400 uppercase tracking-wider mb-3">
        Resources
      </h3>
      <div class="flex flex-col space-y-2">
        <a href="/resources" class="text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100">
          📚 Additional Resources
        </a>
        <a href="/cheatsheet" class="text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100">
          📝 Erlang Cheatsheet
        </a>
        <a href="mailto:feedback@pennypack.dev?subject=Learn Erlang Tutorial Feedback" class="text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100">
          📧 Send Feedback
        </a>
      </div>
    </div>
    
    <div class="mt-8 pt-8 border-t border-gray-200 dark:border-gray-800">
      <h3 class="text-xs font-semibold text-gray-600 dark:text-gray-400 uppercase tracking-wider mb-3">
        About
      </h3>
      <div class="flex flex-col space-y-2">
        <a href="https://pennypack.dev" target="_blank" rel="noopener noreferrer" class="text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100">
          🌐 Pennypack Software
        </a>
        <a href="https://pennypack.dev/about" target="_blank" rel="noopener noreferrer" class="text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100">
          👋 About Us
        </a>
        <a href="https://pennypack.dev/contact" target="_blank" rel="noopener noreferrer" class="text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100">
          📞 Contact
        </a>
      </div>
    </div>
  </div>
</aside>

<script>
  // Update completion status based on localStorage
  function updateSidebarStatus() {
    const completedLessons = JSON.parse(localStorage.getItem('completedLessons') || '[]');
    
    document.querySelectorAll('[data-lesson-number]').forEach((link) => {
      const lessonNumber = parseInt(link.getAttribute('data-lesson-number') || '0');
      if (completedLessons.includes(lessonNumber)) {
        const numberSpan = link.querySelector('span:first-child');
        if (numberSpan && !link.classList.contains('bg-blue-100')) {
          numberSpan.classList.add('bg-green-500', 'text-white', 'border-green-500');
          numberSpan.innerHTML = '<svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" /></svg>';
        }
      }
    });
  }
  
  function initializeSidebar() {
    const sidebar = document.getElementById('sidebar');
    const desktopToggle = document.getElementById('desktop-sidebar-toggle');
    const collapseIcon = document.getElementById('collapse-icon');
    const resizeHandle = document.getElementById('resize-handle');
    const sidebarContent = document.getElementById('sidebar-content');
    
    if (!sidebar || !desktopToggle || !collapseIcon || !resizeHandle || !sidebarContent) return;
    
    // Desktop sidebar toggle
    let isCollapsed = localStorage.getItem('sidebarCollapsed') === 'true';
    
    function applySidebarState() {
      if (isCollapsed) {
        sidebar.style.width = '3.5rem';
        sidebar.style.minWidth = '3.5rem';
        sidebar.style.maxWidth = '3.5rem';
        sidebarContent.style.opacity = '0';
        sidebarContent.style.visibility = 'hidden';
        collapseIcon.style.transform = 'rotate(180deg)';
        desktopToggle.style.right = '-12px';
        resizeHandle.style.display = 'none';
      } else {
        const savedWidth = localStorage.getItem('sidebarWidth') || '16rem';
        sidebar.style.width = savedWidth;
        sidebar.style.minWidth = '12rem';
        sidebar.style.maxWidth = '28rem';
        sidebarContent.style.opacity = '1';
        sidebarContent.style.visibility = 'visible';
        collapseIcon.style.transform = 'rotate(0deg)';
        desktopToggle.style.right = '-12px';
        resizeHandle.style.display = 'block';
      }
    }
    
    function toggleSidebar() {
      isCollapsed = !isCollapsed;
      localStorage.setItem('sidebarCollapsed', isCollapsed.toString());
      applySidebarState();
    }
    
    // Initialize sidebar state
    applySidebarState();
    
    desktopToggle.addEventListener('click', (e) => {
      e.preventDefault();
      toggleSidebar();
    });
    
    // Resize functionality
    let isResizing = false;
    let startX = 0;
    let startWidth = 0;
    
    resizeHandle.addEventListener('mousedown', (e) => {
      if (isCollapsed) return;
      e.preventDefault();
      isResizing = true;
      startX = e.clientX;
      startWidth = parseInt(window.getComputedStyle(sidebar).width, 10);
      document.body.style.cursor = 'col-resize';
      document.body.style.userSelect = 'none';
      
      // Add a semi-transparent overlay while resizing
      const overlay = document.createElement('div');
      overlay.id = 'resize-overlay';
      overlay.style.cssText = 'position: fixed; top: 0; left: 0; width: 100%; height: 100%; z-index: 9999; cursor: col-resize;';
      document.body.appendChild(overlay);
    });
    
    document.addEventListener('mousemove', (e) => {
      if (!isResizing || isCollapsed) return;
      
      const width = startWidth + e.clientX - startX;
      const minWidth = 192; // 12rem
      const maxWidth = 448; // 28rem
      
      if (width >= minWidth && width <= maxWidth) {
        sidebar.style.width = width + 'px';
      }
    });
    
    document.addEventListener('mouseup', () => {
      if (isResizing) {
        isResizing = false;
        document.body.style.cursor = '';
        document.body.style.userSelect = '';
        
        // Remove overlay
        const overlay = document.getElementById('resize-overlay');
        if (overlay) overlay.remove();
        
        // Save the new width
        localStorage.setItem('sidebarWidth', sidebar.style.width);
      }
    });
    
    // Add transition to sidebar content
    sidebarContent.style.transition = 'opacity 0.2s ease-in-out, visibility 0.2s ease-in-out';
  }
  
  document.addEventListener('astro:page-load', () => {
    updateSidebarStatus();
    initializeSidebar();
  });
  document.addEventListener('astro:after-swap', () => {
    updateSidebarStatus();
    initializeSidebar();
  });
  document.addEventListener('DOMContentLoaded', () => {
    updateSidebarStatus();
    initializeSidebar();
  });
</script>